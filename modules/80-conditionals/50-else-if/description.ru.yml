---

name: Конструкция else if
theory: |

  В самой полной версии, конструкция `if` содержит не только ветку `else`, но и другие условные проверки с помощью `else if`. Такой вариант используется при большом количестве проверок, которые взаимоисключают друг друга.

  ```java
  if (/* что-то */) {

  } else if (/* другая проверка */) {

  } else if (/* другая проверка */) {

  } else {

  }
  ```

  Два момента. Ветка `else` может отсутствовать. Количество `else if` условий может быть любым, хоть одно, хоть десять.

  Напишем для примера расширенный метод определяющий тип предложения. Он распознает три вида предложений:

  ```java
  App.getTypeOfSentence("Who?"); // "Sentence is question"
  App.getTypeOfSentence("No");   // "Sentence is general"
  App.getTypeOfSentence("No!");  // "Sentence is exclamation"

  public static String getTypeOfSentence(String sentence)
  {
      var sentenceType = "";

      if (sentense.endsWith('?')) {
          sentenceType = "question";
      } else if (sentense.endsWith('!')) {
          sentenceType = "exclamation";
      } else {
          sentenceType = "general";
      }

      return "Sentence is " + sentenceType;
  }
  ```

  Теперь все условия выстроены в единую конструкцию. `else if` — это «если не выполнено предыдущее условие, но выполнено текущее». Получается такая схема:

  - если последний символ `?`, то `"question"`
  - иначе, если последний символ `!`, то `"exclamation"`
  - иначе `"general"`

  Выполнится только один из блоков кода, относящихся ко всей конструкции `if`.

instructions: |

  На электронной карте Вестероса, которую реализовал Сэм, союзники Старков отображены зеленым кружком, враги — красным, а нейтральные семьи — серым.

  Напишите для Сэма метод `whoIsThisHouseToStarks()`, который принимает на вход фамилию семьи и возвращает одно из трех значений: `"friend"`, `"enemy"`, `"neutral"`.

  Правила определения:

    * Друзья (`"friend"`): "Karstark", "Tally"
    * Враги (`"enemy"`): "Lannister", "Frey"
    * Любые другие семьи считаются нейтральными

  Примеры вызова:

  ```java
  App.whoIsThisHouseToStarks("Karstark"); // "friend"
  App.whoIsThisHouseToStarks("Frey");     // "enemy"
  App.whoIsThisHouseToStarks("Joar");     // "neutral"
  App.whoIsThisHouseToStarks("Ivanov");   // "neutral"
  ```

# tips: []

# definitions:
#   - name: "else if"
#     description: "способ задать несколько альтернативных условий"
