---

name: Конструкция if-else
theory: |

  Условная конструкция `if` имеет несколько разновидностей, одна из которых включает в себя блок, выполняющийся в случае если условие ложно. Пример:

  ```java
  if (x > 5) {
      // Если условие true
  } else {
      // Если условие false
  }
  ```

  Такая структура может понадобится при начальной инициализации значения. В примере ниже проверяется, если `email` отсутствует, то устанавливаем значение по умолчанию, если его передали, то выполняем нормализацию.

  ```java
  // Где-то здесь приходит email

  if (email.equals("")) { // Если email пустой, то ставим дефолт
      email = "support@hexlet.io";
  } else { // иначе чистим
      email = email.trim().toLowerCase();
  }

  // Здесь используем эту почту
  ```

  Если ветка `if` содержит `return`, то `else` становится не нужен и его можно просто опустить:

  ```java
  if (/* условие */) {
      return /* какое-то значение */;
  }

  // продолжаем что-то делать
  // else не нужен
  ```

instructions: |

  Реализуйте метод `normalizeUrl()`, который выполняет так называемую нормализацию данных. Он принимает адрес сайта и возвращает его с *https://* в начале.

  Метод принимает адреса в виде *АДРЕС* или *https://АДРЕС*, но всегда возвращает адрес в виде *https://АДРЕС*

  Можно использовать метод `startsWith()` чтобы проверить начинается ли строка с префикса *https://*. А потом на основе этого добавлять или не добавлять *https://*.

  ```java
  App.normalizeUrl("google.com"); // "https://google.com"
  App.normalizeUrl("https://ai.fi"); // "https://ai.fi"
  ```

# tips: []

# definitions:
#   - name: "else"
#     description: "способ задать блок кода, который будет выполнен, если условие с `if` не удовлетворено"
