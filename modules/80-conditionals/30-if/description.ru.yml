---

name: Условная конструкция (if)
theory: |

  Условные конструкции позволяют выполнять разный код основываясь на логических проверках. Например если у человека есть деньги на счету, то во время покупки деньги спишутся автоматически, если нет, то операция будет отклонена.

  Напишем, для примера, метод, который определяет тип переданного предложения. Для начала она будет отличать обычные предложения от вопросительных.

  ```java
  public static String getTypeOfSentence(sentence) {
      if (sentence.endsWith("?")) {
          return "question";
      }

      return "general";
  }

  App.getTypeOfSentence("Hodor");  // "general"
  App.getTypeOfSentence("Hodor?"); // "question"
  ```

  `if` - конструкция языка, управляющая порядком инструкций. В скобках ей передается логическое выражение, а затем описывается блок кода в фигурных скобках. Этот блок кода будет выполнен, только если условие выполняется. Если условие не выполняется, то блок кода в фигурных скобках пропускается, и метод продолжает свое выполнение дальше. В нашем случае следующая строчка кода — `return "general";` — заставит метод вернуть строку и завершиться.

instructions: |

  Реализуйте метод `getSentenceTone()`, которая принимает строку и определяет тон предложения. Если все символы в верхнем регистре, то это вопль — `scream`. В ином случае — нормальное предложение — `general`.

  Примеры вызова:

  ```java
  App.getSentenceTone("Hello"); // "general"
  App.getSentenceTone("WOW");  // "scream"
  ```

  Алгоритм:

  1. Сгенерируйте строку в верхнем регистре на основе строки-аргумента с помощью `toUpperCase()`.
  2. Сравните её с исходной строкой:
      * Если строки равны, значит, строка-аргумент в верхнем регистре
      * В ином случае — строка-аргумент не в верхнем регистре

tips: []

definitions: []

