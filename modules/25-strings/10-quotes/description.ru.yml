---

name: Кавычки
theory: |

  ```java
  "Hello"
  "Goodbye"
  "G"
  " "
  ""
  ```

  Какие из этих пяти вариантов — строки? С первыми двумя все понятно, это точно строки, мы уже работали с подобными конструкциями. А что насчет остальных? Любой одиночный символ в кавычках — это строка. Пустая строка `""` — это тоже строка. То есть строкой мы считаем всё, что находится внутри кавычек, даже если это пробел, один символ или вообще отсутствие символов.

  Представьте, что вы хотите напечатать строчку *dragon's mother*. Апостроф перед буквой **s** — это такой же символ, как одинарная кавычка. Попробуем:

  Такой вариант программы отработает корректно:

  ```java
  System.out.println("Dragon's mother");
  ```

  А что, если мы хотим создать такую строку:

  <pre class='hexlet-basics-output'>
  Dragon's mother said "No"
  </pre>

  В ней есть и одинарные и двойные кавычки. Как быть в этой ситуации? Если просто попытаться вывести такую строку, то мы получим ошибку:

  ```java
  // Завершится с синтаксической ошибкой
  System.out.println("Dragon's mother said "No"");
  ```

  С точки зрения Java, здесь странная конструкция состоящая из строк *"Dragon's mother said "* и *""* и *No* между ними без пробелов. Причем последнее не рассматривается как строка, оно не в кавычках. Значит прямым способом эту строчку не вывести.

  Для вывода таких строк используют **символ экранирования**: `\`. Если поставить `\` перед кавычкой, это будет означать, что кавычку нужно рассматривать не как начало или конец строки, а как часть строки.

  ```java
  System.out.println("Dragon's mother said \"No\"");
  ```

instructions: |

  Напишите программу, которая выведет на экран:

  <pre class='hexlet-basics-output'>
  "Khal Drogo's favorite word is "athjahakar""
  </pre>

  Программа должна вывести на экран эту фразу в точности. Обратите внимание на кавычки в начале и в конце фразы.

# tips: []
