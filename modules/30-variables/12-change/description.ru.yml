---

name: Изменение переменной

theory: |

  Само слово «переменная», говорит о том, что ее можно менять. И действительно, с течением времени внутри программы, значения переменных могут изменяться.

  ```java
  var greeting = "Father!";
  System.out.println(greeting);
  System.out.println(greeting);

  // var уже не используется, так как переменная была определена выше
  greeting = "Mother!";
  System.out.println(greeting);
  System.out.println(greeting);
  ```

  Java статически типизированный язык, это значит что тип переменной задается при определении и больше не меняется. В примере выше, при создании переменной, мы присвоили ей строку. Компилятор запоминает тип и проверяет все последующие изменения переменной. Если попробовать этой же переменной строку, то мы получим следующую ошибку:

  ```java
  greeting = 5;
  # Error:
  # incompatible types: int cannot be converted to java.lang.String
  # несовместимые типы: число не может быть превращено в строку
  ```

  Интересно то, что компилятор делает такую проверку без запуска кода на выполнение, именно поэтому такой вид типизации называют статическим (статика – без запуска). В динамических языках, таких как java, Ruby, PHP или Python, подобное поведение не является ошибкой, переменная может легко изменить свой тип в процессе работы.

instructions: |

  В коде определена переменная со значением `"Brienna"`. Переопределите значение этой переменной и присвойте ей такую же, но в перевернутом виде.

  <pre class='hexlet-basics-output'>
  anneirB
  </pre>

# tips: []

# definitions:
#   - name: Переменная
#     description: Способ сохранить информацию и дать ей имя для последующего использования в коде.
