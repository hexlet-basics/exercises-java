---

name: Variables and Concatenation
theory: |

  To consolidate the previous topic, try using variables with concatenation. Syntactically nothing changes: we can concatenate (glue) two lines:

  ```java

  var what = "Kings" + "road";
  System.out.print(what); // => "Kingsroad"
  ```

  ... which means we can concatenate a string and one variable in which the string is written:

  ```java

  var first = "Kings";
  var what = first + "road";

  System.out.print(what); // => "Kingsroad"
  ```

  ... and even concatenate two variables in which the lines are written:

  ```java

  var first = "Kings";
  var last = "road";

  var what = first + last;
  System.out.print(what); // => "Kingsroad"
  ```

instructions: |

  Sites are constantly sending emails to their users. A typical task is to make an automatic sending of a personal letter, where the user name is in the header. If somewhere in the site base the name of the person is stored as a string, then the task of generating the header is reduced to concatenation: for example, you need to glue the string `Hello` with the string where the name is written.

  Write a program that will generate the header and body of the letter, using the ready-made variables, and display the resulting lines on the screen.

  For the title, use the variables `firstName` and `greeting`, a comma and an exclamation point. Display it in the correct order.

  For the body of the letter, use the variables `info` and `intro`, with the second sentence should be on a new line.

  The result on the screen will look like this:

  ```
  Hello, Joffrey!
  Here is an important information about your account security.
  We couldn't verify you mother's maiden name.
  ```

  Perform the job using only two `System.out.print`.

tips:
  - |
    Consider with which line and in what order you need to glue the modules.variables together in order to get such a two-line output of the letter body.
  - |
    Remember that you can create a string that contains only the control sequence `\n`.
