---

name: Valor null

theory: |
  En Java, el valor `null` es especial. No es un tipo en sí mismo, sino simplemente un valor con un significado y una lógica de funcionamiento específicos. Comencemos con un ejemplo:

  ```java
  // Declaración de una variable sin inicializar
  // No se puede hacer esto con 'var' ya que no se puede inferir el tipo
  String a;
  ```

  ¿Qué hay dentro de la variable `a`? Si la imprimimos, veremos `null`. El valor `null` se utiliza para tipos de referencia cuando el valor no está definido.

  ¿Cómo es esto posible? Imagina que queremos obtener un usuario de una base de datos, pero no existe. ¿Qué nos devolverá la consulta a la base de datos? Ahí es donde entra en juego `null`.

  Hay muchas situaciones en las que se utiliza `null`, más de las que podrías pensar a primera vista. A medida que avancemos, lo encontraremos con mayor frecuencia:

  ```java
  var user = // aquí hacemos una consulta a la base de datos
  // Si no hay datos, user se convierte en null
  // La línea anterior es equivalente a
  var user = null;
  ```

  De lo anterior se deduce una conclusión importante. Cualquier tipo de referencia puede tener el valor `null`. Es decir, `null` es un valor válido para cualquier tipo de referencia. Sin embargo, los tipos primitivos y `null` no son compatibles. Un valor primitivo siempre debe estar definido:

  ```java
  // Error: tipos incompatibles: <nulltype> no se puede convertir a int
  int x = null;
  ```

instructions: |

  Defina una variable llamada `greeting`, pero no la inicialice. Luego asigne el valor a la variable `greeting`
  significado *Hello Hexlet!*. Muestra el resultado en la pantalla.

tips:
  - |
    [Artículo sobre números decimales](https://habrahabr.ru/post/112953/)

# definitions:
#   - name: "Tipo de dato"
#     description: "un conjunto de datos en el código (un tipo particular de información). El tipo de dato determina qué se puede hacer con los elementos de un conjunto específico. Por ejemplo, los números enteros, los números racionales y las cadenas de texto son diferentes tipos de datos."
#   - name: "Tipos de datos primitivos"
#     description: "tipos simples incorporados en el propio lenguaje de programación."
#   - name: "Cadena de texto (String)"
#     description: |
#       "un tipo de dato que representa una secuencia de caracteres (es decir, texto); por ejemplo, `"texto"`."
